rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function student(schoolId) {
      return request.auth.token.email_verified && request.auth.token.school == schoolId;
    }
    function admin() {
      return request.auth.token.role == "owner" || request.auth.token.role == "admin";
    }
    function officer() {
      return request.auth.token.email in resource.data.officers;
    }
    function onlyChanged(keys) {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(keys);
    }
    match /schools/{school_id} {
      // schools can only be created/deleted from the admin API
      allow read: if student(school_id);
      // Members/admins/owner updates can only be done through the admin API (requires changing roles)
      allow update: if student(school_id) && admin() && onlyChanged(["name", "website", "domainRestriction"]);

      match /clubs/{club_id} {   
        // stuco can create, edit, and delete
        allow delete: if admin() && student(school_id);
        allow create: if admin() && student(school_id) &&
          request.resource.data.keys().toSet() == ["name", "description", "officers", "contact"].toSet();
        // officers can edit fields
        // TODO: better checking for updating "officers" field
        allow update: if student(school_id) && (admin() || officer()) &&
          onlyChanged(["name", "description", "officers", "contact", "logoUrl", "topics", "meetings", "signup"]);
        allow read: if student(school_id) && (resource.data.public || resource.data.;

        match /messages/{message_id} {
          // todo: fix these
          allow create: if student(school_id) && officer() && request.resource.data.keys.hasOnly(["timestamp", "message", "sender"]);
          allow read: if student(school_id);
        }
      }

      match /clubs_private/{club_id} {
        allow read: if student(school_id) && officer();
        allow write: if student(school_id) && officer() && request.resource.data.keys().hasOnly(["members"]);
      }
    }
  }
}
